Agenda
	rg
		location, name
		
		varibale rgname{
			default = "teraformrg"
		}
		varibale location{
			default = "West US 2"
		}
		resource "azurerm_resource_group" "example" {
		  name     = var.rgname
		  location = var.location
		} 
		azurerm_resource_group.example.name
	vnet
		varibale vnetname{
			default = "vanettf"
		}
		varibale addressapce{
			default = ["10.0.0.0/16"]
			type = list(string)
		}
	resource "azurerm_virtual_network" "example" {
	  name                = var.vnetname
	  resource_group_name     = var.rgname
		  location = var.location
	  address_space       = var.addressapce
	  }
		name, rg, location, address space
	snet
	
	variable snetname{
			default = "snettf"
		}
		variable saddressapce{
			default = ["10.0.1.0/24"]
			type = list(string)
		}
	resource "azurerm_subnet" "example" {
		  name                 = var.snetname
		  resource_group_name  = azurerm_resource_group.example.name
		  virtual_network_name = azurerm_virtual_network.example.name
		  address_prefixes     = var.saddressapce
}
		name, rg,  address space, vnet
	pip
		name, rg, location, allocation type
		variable pip{
			default = "pipname"
		}
		resource "azurerm_public_ip" "example" {
		  name                = var.pip
		  resource_group_name = azurerm_resource_group.example.name
		  location            = azurerm_resource_group.example.location
		  allocation_method   = "Static"

		}
	nsg
		name, rg, location, security rule(some fields)
		variable nsg{
			default = "nsgname"
		}
		resource "azurerm_network_security_group" "example" {
		  name                = var.nsg
		  location            = azurerm_resource_group.example.location
		  resource_group_name = azurerm_resource_group.example.name

		  security_rule {
			name                       = "test123"
			priority                   = 100
			direction                  = "Inbound"
			access                     = "Allow"
			protocol                   = "Tcp"
			source_port_range          = "*"
			destination_port_range     = "22"
			source_address_prefix      = "*"
			destination_address_prefix = "*"
		  }
		  
		  }
  
	nic
		name, rg, location, ipconfig(pip, pvt ip)
		nsg, dns
			
			variable nic{
			default = "nicname"
		}
		variable ipconfigname{
			default = "ipname"
		}
			resource "azurerm_network_interface" "example" {
			  name                = var.nic
			  location            = azurerm_resource_group.example.location
			  resource_group_name = azurerm_resource_group.example.name

			  ip_configuration {
				name                          = var.ipconfigname
				subnet_id                     = azurerm_subnet.example.id
				private_ip_address_allocation = "Dynamic"
				public_ip_address_id = azurerm_public_ip.example.id
			  }
			}
			
			resource "azurerm_network_interface_security_group_association" "example" {
			  network_interface_id      = azurerm_network_interface.example.id
			  network_security_group_id = azurerm_network_security_group.example.id
			}
	vm 
		name
		image
			publisher
			offer
			sku
		size
			D2ls_v5
		ssh
			ssh config
		os disk
			size, rw
		vnet,snet, nic
		pip
		variable vmname{
			default = "vmname"
		}
		variable size{
			default = "D2ls_v5"
		}
		variable username{
			default = "adi"
		}
		variable image{
			default = {
			publisher = "Canonical"
			offer     = "0001-com-ubuntu-server-jammy"
			sku       = "22_04-lts-gen2"
			version   = "latest"
		  }
			type = object ({
			publisher = string
			offer     = string
			sku       = string
			version   = string
		  })
		}
		resource "azurerm_linux_virtual_machine" "example" {
		  name                = var.vmname
		  resource_group_name = azurerm_resource_group.example.name
		  location            = azurerm_resource_group.example.location
		  size                = var.size
		  admin_username      = var.username
		  network_interface_ids = [
			azurerm_network_interface.example.id,
		  ]

		  admin_ssh_key {
			username   = var.username
			public_key = azurerm_ssh_public_key.example.public_key
		  }

		  os_disk {
			caching              = "ReadWrite"
			storage_account_type = "Standard_LRS"
		  }

		  source_image_reference {
			publisher = var.image.publisher
			offer     = var.image.offer
			sku       = var.image.sku
			version   = var.image.version
		  }
		}
	ssh key
		pem/pub
		variable sshname{
			default = "sshkey"
		}
		resource "azurerm_ssh_public_key" "example" {
		  name                = var.sshname
		  location            = azurerm_resource_group.example.location
		  resource_group_name = azurerm_resource_group.example.name
		  public_key          = file("~/.ssh/id_rsa.pub")
		}
	data disk
		disk name, disk size, rw/ro
		
	output pip{
		value = azurerm_public_ip.example.id
	}
		
generate ssh key
ssh-keygen -t rsa

az vm list-sizes --location "West US 2" -o table





------------------------
resource "azurerm_network_interface_security_group_association" "example" {
  network_interface_id      = azurerm_network_interface.example.id
  network_security_group_id = azurerm_network_security_group.example.id
}
variable "nic" {
  default = "nicname"
}
variable "ipconfigname" {
  default = "ipname"
}
resource "azurerm_network_interface" "example" {
  name                = var.nic
  location            = azurerm_resource_group.example.location
  resource_group_name = azurerm_resource_group.example.name

  ip_configuration {
    name                          = var.ipconfigname
    subnet_id                     = azurerm_subnet.example.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.example.id
  }
}
variable "nsg" {
  default = "nsgname"
}
resource "azurerm_network_security_group" "example" {
  name                = var.nsg
  location            = azurerm_resource_group.example.location
  resource_group_name = azurerm_resource_group.example.name

  security_rule {
    name                       = "test123"
    priority                   = 100
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "22"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }
}
output "pip" {
  value = azurerm_public_ip.example.ip_address
}
variable "pip" {
  default = "pipname"
}
resource "azurerm_public_ip" "example" {
  name                = var.pip
  resource_group_name = azurerm_resource_group.example.name
  location            = azurerm_resource_group.example.location
  allocation_method   = "Static"

}
terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "4.37.0"
    }
  }
}

provider "azurerm" {
  features {}
}
variable "rgname" {
  default = "teraformrg"
}
variable "location" {
  default = "West US 2"
}
resource "azurerm_resource_group" "example" {
  name     = var.rgname
  location = var.location
}

variable "snetname" {
  default = "snettf"
}
variable "saddressapce" {
  default = ["10.0.1.0/24"]
  type    = list(string)
}
resource "azurerm_subnet" "example" {
  name                 = var.snetname
  resource_group_name  = azurerm_resource_group.example.name
  virtual_network_name = azurerm_virtual_network.example.name
  address_prefixes     = var.saddressapce
}
variable "sshname" {
  default = "sshkey"
}
resource "azurerm_ssh_public_key" "example" {
  name                = var.sshname
  location            = azurerm_resource_group.example.location
  resource_group_name = azurerm_resource_group.example.name
  public_key          = file("~/.ssh/id_rsa.pub")
}
variable "vmname" {
  default = "vmname"
}
variable "size" {
  default = "Standard_D2ls_v5"
}
variable "username" {
  default = "adi"
}
variable "image" {
  default = {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-jammy"
    sku       = "22_04-lts-gen2"
    version   = "latest"
  }
  type = object({
    publisher = string
    offer     = string
    sku       = string
    version   = string
  })
}
resource "azurerm_linux_virtual_machine" "example" {
  name                = var.vmname
  resource_group_name = azurerm_resource_group.example.name
  location            = azurerm_resource_group.example.location
  size                = var.size
  admin_username      = var.username
  network_interface_ids = [
    azurerm_network_interface.example.id,
  ]

  admin_ssh_key {
    username   = var.username
    public_key = azurerm_ssh_public_key.example.public_key
  }

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = var.image.publisher
    offer     = var.image.offer
    sku       = var.image.sku
    version   = var.image.version
  }
}
variable "vnetname" {
  default = "vanettf"
}
variable "addressapce" {
  default = ["10.0.0.0/16"]
  type    = list(string)
}
resource "azurerm_virtual_network" "example" {
  name                = var.vnetname
  resource_group_name = azurerm_resource_group.example.name
  location            = var.location
  address_space       = var.addressapce
}

===============================
https://registry.terraform.io/modules/Azure/virtual-machine/azurerm/latest/examples/basic?tab=inputs

==========================
pending
------
terraform cloud
using trird party provider
additional resource

==============================
snetname = "snet3007"
saddressapce=["10.5.0.0/24"]
pip="publicname"
nsg="newnsg"
nic="newnic"
ipconfigname="ipnamesnet3007"
vmname="vmsnet3007"
size="Standard_D2a_v4"
username="adi"
image={ publisher = "Canonical", offer = "0001-com-ubuntu-server-jammy", sku = "22_04-lts-gen2", version   = "latest" }
sshname="sshsnet3007"
rgname="rgsnet3007"
location="Australia East"
vnetname="vnetsnet3007"
addressapce=["10.5.0.0/16"]
